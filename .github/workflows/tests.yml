name: Tests

on:
  push:
    branches: [ master, dev ]
    paths-ignore:
    - 'docs/**'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7] #[3.5, 3.6, 3.7, 3.8]
        os: [windows-latest] #[ubuntu-latest, windows-latest, macos-latest]
      #fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }} (Miniconda)
      uses: goanpeca/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge
    - name: Conda info
      shell: bash -l {0}
      run: |
        conda info
        conda list
        conda config --show-sources
        conda config --show
    - name: Install build dependencies
      shell: bash -l {0}
      run: |
        conda install -n base conda-build conda-verify pyqt sip
        conda install boost-cpp c-compiler cxx-compiler pyqt sip rdkit
    - name: Get sipconfig
      shell: bash -l {0}
      run: python -c "import sipconfig; print(sipconfig.Configuration().sip_bin)"
    - name: Install mesalib
      shell: bash -l {0}
      run: conda install mesalib
      if: runner.os == 'Linux'
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.0
      if: runner.os == 'Windows'
    - name: Build
      shell: bash -l {0}
      run: |
        python setup.py build_ext --inplace
        python setup.py develop
    - name: Install test dependencies
      shell: bash -l {0}
      run: conda install -q tinycss2 pytest pylint pytest-pylint toml pytest-qt pytest-cov codecov pytest-mock tinycss2
    - name: Install xvfb
      shell: bash -l {0}
      run: conda install pytest-xvfb
      if: runner.os == 'Linux'
    - name: Install pywin32
      shell: bash -l {0}
      run: conda install pywin32
      if: runner.os == 'Windows'
    - name: Test with pytest
      shell: bash -l {0}
      run: pytest --cov=PyQtNetworview --cov-report=xml
    - name: Upload coverage
      if: success()
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        name: ${{ runner.os }} Python ${{ matrix.python-version }}
